misc:乱码txt更改文件扩展名，尝试更改为png/jpg格式，就可正确显示flag.     txt和png互相转换一下看看有没有线索（png直接用记事本打开就能看到txt文件了。）
    bpg 格式可以用Bandiview,bpgview,honeyview 等打开查看
    图片隐写：一张图片里面还隐藏了一张图
        kali-Linux操作系统安装，可以使用foremost命令分离两张图片，即可看到flag.
         winhex或010 ediror 工具ctrl+F直接开始搜索flag.
     binwalk -e 文件复制过来 =》flag
   word隐写：ctrl+A,右键，字体，取消勾选隐藏文字，看到flag.
   加密的压缩包：使用ARCHPR工具暴力破解密码（最好能根据已知推断出密码类型、密码长度，然后再进行爆破），再把密码输进去打开.txt文件，就可看到flag.

89 50 4E 47 0D 0A 1A 0A    PNG文件标识


密码：
一·
53316C6B5A6A42684D3256695A44566A4E47526A4D5459774C5556375A6D49324D32566C4D4449354F4749345A6A526B4F48303D
分析题目，密文附带了工具，我们下载打开发现有 16进制编辑器 （不会用，直接搜网上的编辑器）和 栅栏密码加解密1.10 那么我们就确定了这是一串16进制密文。利用网上的16进制转文本得到了
S1lkZjBhM2ViZDVjNGRjMTYwLUV7ZmI2M2VlMDI5OGI4ZjRkOH0=
有等号垫底，猜想是base64（最常用），我们尝试解密发现可以解出
KYdf0a3ebd5c4dc160-E{fb63ee0298b8f4d8}
提交flag的格式为key{xxx} 接着还是不能提交，因为不是提交的格式。别慌，我们不是下载了一个【Tools】压缩包吗，里面有【栅栏密2码加解密1.10】， 我们填进去，发现栏数只有两个选择：2和19。 我们从2栏开始解密得
KEY{dffb06a33eeeb0d259c84bd8cf146d08-}
注：1.分析数据：1~F的数据，最大是F，结合所学F=15，故猜想是十六进制数。   ————十六进制数转字符（使用在线工具
    2.得到字符串后，发现等号结尾，猜测是base64编码。   ————最常用的加密方法：base64编码，   使用在线工具进行base64 解密。
    3.解密出来后已经可以发现含有KEY 等这些标准flag的字母了，但是，只不过字母的顺序不对，并且感觉有点像对称分布，需要我们按一定的规则去重新进行排序。  ————栅栏密码
    4.栅栏密码加密/解密  （在线工具  ————就能得到正确的flag了。

补充：栅栏密码：
所谓的栅栏密码，就是将一段被加密的明文划分成N个组，然后取每个组的第1个字符，根据情况排列成一段话，特点相对简单，字母不会太多。
例如明文：THISISZHISHITOM   设置 栏数为3
加密：（均分为3组）: 第一组：T H I S I 第二组：S Z H I S 第三组：H I T O M 
然后按列取出字母：TSH HZI IHT SIO ISM 
然后连在一起就形成了加密：TSHHZIIHTSIOISM  。

二·
1.判断加密类型： 由"."和"-"组成的是摩斯密码。morse
    摩斯密码是一种通过点（"."）和划 (“-”）代表的编码系统，用于无线电报、电话通讯等。这个系统由两种信号构成，点和划的不同组合代表了不同的字母和数字。
            在线解密时会出现一堆乱码，是系统默认为/是分隔符号导致,要注意将分隔符设为空格.   注意要删去/等字符，。    分隔符使用空格。

2.判断加密类型：由大量的"A"和"B"（两种字体）组成的是培根密码。bacon   ————一般需要先转换出A,B。     两种字体分别对应A和B，用A，B替换。再使用在线工具解密。
   将所有字母都用ab表示，类似二进制所有数都用01表示。特点就是会有大量重复的ab
   a,b每5个为一组，可以对应解密出一个字母。



web:
    intval()函数绕过：
1）当某个数字被过滤时，可以使用它的 8进制/16进制来绕过；比如过滤10，就用012（八进制）或0xA（十六进制）。    0b表示二进制
2）对于弱比较（a==b），可以给a、b两个参数传入空数组，使弱比较为true。
3）当某个数字被过滤时，可以给它增加小数位来绕过；比如过滤3，就用3.1。
4）当某个数字被过滤时，可以给它拼接字符串来绕过；比如过滤3，就用3ab。（GET请求的参数会自动拼接单引号）
5）当某个数字被过滤时，可以两次取反来绕过；比如过滤10，就用~~10。
6）当某个数字被过滤时，可以使用算数运算符绕过；比如过滤10，就用 5+5 或 2*5。
————————————————
   eg：     if(intval($id) > 999){''''
            # id 大于 999 直接退出并返回错误 
            <!-- flag in id = 1000 -->
//————可以用'1000',500*2,~~1000等等来绕过。
    在URL网址后面加上    /?id='1000'   再enter,  就能利用intval漏洞，绕过报错了，   就能看到flag了。
                          
